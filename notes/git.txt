Git


# Setup your identity and suppress warnings.

git config --global user.name "Lee Baird"
git config --global user.email "leebaird@acme.com"
git config --global pull.rebase false
------------------------------------------------------------------------------------------------------------------------------------------------------

# Fork a repo using your web browser.

# Clone the new fork.
    git clone git@github.com:<username>/<forked repo>
    git clone git@github.com:leebaird/shad0w.git
    cd shad0w/

# Add the upstream repo so that you can pull changes.
    git remote add upstream https://github.com/<original repo>
    git remote add upstream https://github.com/bats3c/shad0w.git

# Validate connectivity.
    ssh -T git@github.com
------------------------------------------------------------------------------------------------------------------------------------------------------

# Working on a new branch.

Always avoid working on the master branch. It usually results in merge conflicts and/or update issues.
Instead, work on dev branch whenever possible.

    # Check the status.
    git status

    # Show local branches.
    git branch

    # Show remote branches.
    git branch -r

    # Create a new dev branch.
    git branch dev

    # Switch to the dev branch
    git checkout dev
------------------------------------------------------------------------------------------------------------------------------------------------------

# Keep your fork updated.

Once you fork a project, it does not automatically track with the upstream repo.

    # Pull the latest changes from the upstream repo.
    git fetch upstream

    # Make sure you are working on the master branch.
    git checkout master

    # Merge the latest upstream changes.
    git merge upstream/master

    # Check the status.
    git status

    # Add all edits.
    git add -A

    # Add specific edits.
    git add <file1> <file2>

    # Add commit message.
    git commit -am 'Brief description of edits.'

    # Push the new changes to your fork.
    git push origin master

    You will need to authenticate.
    Refresh your web browser to see the changes.
------------------------------------------------------------------------------------------------------------------------------------------------------

# The dev branch it out of date because you were working from the master branch.
    git checkout dev
    git merger master

    # Push the updated branch back to the dev branch in your fork.
    git push origin dev -f
------------------------------------------------------------------------------------------------------------------------------------------------------

# Submit a pull request.

    Update your branch and make sure you are rebased off the latest upstream/master.
    Squash your commits onto a single revision.
    Using your web browser, click on Pull request > Create pull request 2x
------------------------------------------------------------------------------------------------------------------------------------------------------

# Delete branches.

    # Local
    git branch -D <branch>

    # Remote
    git push origin --delete <branch>

